(*************************************************************************************)
(************************* FeynRules model file for **********************************)
(********************* the Vector Singlets (Bridge model) ****************************)
(*************************************************************************************)
(*************************************************************************************)


(*************************************************************************************)
(*******************************  Parameters *****************************************)
(*************************************************************************************)
M$Parameters = {

  (* External parameters *)

  aEWM1== {
        ParameterType -> External,
        BlockName -> SMINPUTS,
        ParameterName -> aEWM1,
        InteractionOrder -> {QED, -2},
     	TeX -> Superscript[Subscript[\[Alpha], EW],"-1"], 
        Value -> 127.9,
        Description -> "Inverse electroweak coupling constant at the Z pole"},

  Gf == {
	    ParameterType    -> External,
	    BlockName        -> SMINPUTS,
	    Value            -> 1.16637*^-5, 
	    InteractionOrder -> {QED,2},
	    TeX              -> Subscript[G,f],
	    Description      -> "Fermi constant"},

  gv == {
        TeX -> Subscript[g, V],
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        InteractionOrder -> {QED, 1},
        Value -> 2,
        Description -> "Heavy vector coupling"},
	
  MVz == {
        TeX -> Subscript[M, Superscript[V,"0"]],
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 2000,
        ComplexParameter -> False,
	    Description -> "Neutral heavy vector mass"},

  MVc == {
        TeX -> Subscript[M, Superscript[V,"+"]],
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 2000,
        ComplexParameter -> False,
		Description -> "Charged heavy vector mass"},

  \[Alpha]S == {
        ParameterType -> External,
        BlockName -> SMINPUTS,
        ParameterName -> aS,
        InteractionOrder -> {QCD, 2},
        Value -> 0.118,
        Description -> "Strong coupling constant at the Z pole"},

  ymc == {
        ParameterType -> External,
        BlockName -> YUKAWA,
        Value -> 1.42,
        OrderBlock -> {4},
        Description -> "Charm Yukawa mass"},

  ymb == {
        ParameterType -> External,
        BlockName -> YUKAWA,
        Value -> 4.7,
        OrderBlock -> {5},
        Description -> "Bottom Yukawa mass"},

  ymt == {
        ParameterType -> External,
        BlockName -> YUKAWA,
        Value -> 172.9,
        OrderBlock -> {6},
        Description -> "Top Yukawa mass"},

  ymtau == {
        ParameterType -> External,
        BlockName -> YUKAWA,
        Value -> 1.777,
        OrderBlock -> {15},
        Description -> "Tau Yukawa mass"},

  cpsi == {
        ParameterType -> External,
        BlockName -> CHINPUTS,
        Value -> 1.0,
        Description -> "Yukawa rescaling"},

  aa == {
        TeX -> a,
        ParameterType -> External,
        BlockName -> CHINPUTS,
        Value -> 1.0,
        Description -> "Rescaling of the linear Higgs coupling to longitudinal gauge bosons"},

  bb == {
        TeX -> b,
        ParameterType -> External,
        BlockName -> CHINPUTS,
        Value -> 1.0,
        Description -> "Rescaling of the quadratic Higgs coupling to longitudinal gauge bosons"},

  d3 == {
        ParameterType -> External,
        BlockName -> CHINPUTS,
        Value -> 1.0,
        Description -> "Rescaling of the Higgs cubic interaction"},

  d4 == {
        ParameterType -> External,
        BlockName -> CHINPUTS,
        Value -> 1.0,
        Description -> "Rescaling of the Higgs quartic interaction"},

  cvvbC == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Heavy vector coupling VVB"},

  cqLN == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling to 1st and 2nd generation LH quark doublet"},

  cqL3N == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling to 3rd generation LH quark doublet"},

  clN == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling to LH lepton doublet"},

  cuRN == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling to 1st and 2nd generation RH u type quarks"},

  cuR3N == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling to 3rd generation  RH u type quarks"},

  cdRN == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling to 1st and 2nd generation RH d type quarks"},

  cdR3N == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling to 3rd generation  RH d type quarks"},

  ceRN == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling to RH electrons"},

  cuRC == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Charged heavy vector coupling to 1st and 2nd generation quarks"},

  cuR3C == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Charged heavy vector coupling to 3rd generation quarks"},

  chN == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling with the Higgs"},

  chC == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Charged heavy vector coupling with the Higgs"},

  cvvhhN == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Neutral heavy vector coupling VVHH"},
 
  cvvhhC == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Charged heavy vector coupling VVHH"},

  cvvvN == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Trilinear neutral heavy vector coupling"},

  cvvvC == {
        ParameterType -> External,
        BlockName -> SINGLETINPUTS,
        Value -> 1,
        Description -> "Trilinear charged heavy vector coupling"},

   (* Internal Parameters *)

 
  aEW == {
        ParameterType -> Internal,
        Value -> 1/aEWM1,
        ParameterName -> aEW,
        InteractionOrder -> {QED, 2},
     	TeX -> Subscript[\[Alpha], EW], 
        Description -> "Electroweak coupling constant at the Z pole"},

  gw == {
	    TeX -> Subscript[g, w],
	    ParameterType -> Internal,
	    ParameterName -> gw,
	    Value -> Sqrt[(Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
   Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
      64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
      128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)],
	    InteractionOrder -> {QED, 1},
	    Description -> "Weak coupling"},

  vv == {
        TeX -> OverTilde[v],
        ParameterType -> Internal,
        Value -> Sqrt[2]*Sqrt[(((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
       Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
          64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
          128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))*
      (MVz^2 - (chN^2*gv^2*MZ^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
          Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
             64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
             128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)))/
        (MVz^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
           Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
              64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
              128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2) - 
       (2*chN^4*gv^4*MZ^6*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
           Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
              64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
              128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2)/
        (MVz^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
           Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
              64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
              128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^4)) - 
     Sqrt[(MVz^2 - (chN^2*gv^2*MZ^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
           Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
              64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
              128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)))/
         (MVz^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
            Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*
                Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*
                MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2) - 
        (2*chN^4*gv^4*MZ^6*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
            Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*
                Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*
                MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2)/(MVz^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/
             (2*Sqrt[2]*MVc^2*MVz^2) + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*
                MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*
                MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^4))*(16*aEW*chN^2*gv^2*MZ^2*Pi - 
        4*chN^2*gv^2*MZ^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
          Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
             64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
             128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)) + 
        ((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
           Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
              64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
              128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2*
         (MVz^2 - (chN^2*gv^2*MZ^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
             Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
                64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
                128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)))/(MVz^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 
                8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*
                  MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 
                 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2) - 
          (2*chN^4*gv^4*MZ^6*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
              Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
                 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
                 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2)/(MVz^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 
                8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*
                  MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 
                 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^4)))])/
    (chN^2*gv^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
      Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
         64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
         128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)))],
        InteractionOrder -> {QED, -1},
        Description -> "Higgs vacuum expectation value"},

  mmVzt == {
        TeX -> Subscript[OverTilde[m],VN],
        ParameterType -> Internal,
        Value -> Sqrt[MVz^2 - (chN^2*gv^2*MZ^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 
      4*aEW*Pi + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
         64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
         128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)))/
    (MVz^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
       Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
          64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
          128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2) - 
   (2*chN^4*gv^4*MZ^6*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
       Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
          64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
          128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2)/
    (MVz^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
       Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
          64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
          128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^4)],
	    Description -> "Mass hat for the neutral heavy vector"},

  mmVz == {
        TeX -> Subscript[m,VN],
        ParameterType -> Internal,
        Value -> Sqrt[mmVzt^2 - cvvhhN gv^2 vv^2],
        Description -> "Lagrangian mass parameter for the neutral heavy vector"},

  mmVct == {
        TeX -> Subscript[OverTilde[m],VC],
        ParameterType -> Internal,
        Value -> Sqrt[
  MVc^2/2 + 
   Sqrt[MVc^4 - (4*chC^2*(((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
            Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*
                Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*
                MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))*(MVz^2 - (chN^2*gv^2*MZ^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 
                 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 
                  16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 
                  32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)))/
             (MVz^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
                Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
                   64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*
                    Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2) - 
            (2*chN^4*gv^4*MZ^6*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
                Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
                   64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*
                    Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2)/(MVz^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 
                  8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*
                    MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*
                    Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^4)) - 
          Sqrt[(MVz^2 - (chN^2*gv^2*MZ^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
                Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
                   64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*
                    Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)))/(MVz^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 
                   8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*
                     MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*
                     Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2) - 
             (2*chN^4*gv^4*MZ^6*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
                 Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
                    64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*
                     Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2)/(MVz^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 
                   8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*
                     MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*
                     Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^4))*
            (16*aEW*chN^2*gv^2*MZ^2*Pi - 4*chN^2*gv^2*MZ^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/
                (2*Sqrt[2]*MVc^2*MVz^2) + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 
                  32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 
                  128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)) + 
             ((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
                Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
                   64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*
                    Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2*(MVz^2 - (chN^2*gv^2*MZ^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 
                    4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*
                      MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 
                     64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/
                   (2*Sqrt[2]*MVc^2*MVz^2)))/(MVz^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
                   Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
                      64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*
                       Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2) - (2*chN^4*gv^4*MZ^6*
                 ((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) - 4*aEW*Pi + 
                   Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
                      64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*
                       Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^2)/(MVz^4*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*
                      MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*
                       gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*
                       MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2))^4)))])^2)/
       (chN^4*gv^2*((Sqrt[2]*chN^2*gv^2*MVc^2*MZ^2 - 4*Sqrt[2]*chC^2*gv^2*MVz^2*MZ^2 + 8*Gf*MVc^2*MVz^2*MZ^2)/(2*Sqrt[2]*MVc^2*MVz^2) + 
         Sqrt[2*chN^4*gv^4*MVc^4*MZ^4 - 16*chC^2*chN^2*gv^4*MVc^2*MVz^2*MZ^4 + 16*Sqrt[2]*chN^2*Gf*gv^2*MVc^4*MVz^2*MZ^4 + 32*chC^4*gv^4*MVz^4*MZ^4 - 
            64*Sqrt[2]*chC^2*Gf*gv^2*MVc^2*MVz^4*MZ^4 + 64*Gf^2*MVc^4*MVz^4*MZ^4 - 32*aEW*chN^2*gv^2*MVc^4*MVz^2*MZ^2*Pi + 128*aEW*chC^2*gv^2*MVc^2*MVz^4*MZ^2*Pi - 
            128*Sqrt[2]*aEW*Gf*MVc^4*MVz^4*MZ^2*Pi]/(2*Sqrt[2]*MVc^2*MVz^2)))]/2],
        Description -> "Mass hat for the charged heavy vector"},

  mmVc == {
        TeX -> Subscript[m,VC],
        ParameterType -> Internal,
        Value -> Sqrt[ mmVct^2 - cvvhhC gv^2 vv^2],
        Description -> "Lagrangian mass parameter for the charged heavy vector"},

  ee == {
        TeX -> e,
        ParameterType -> Internal,
        Value -> Sqrt[4 Pi aEW],
        InteractionOrder -> {QED, 1},
        Description -> "Electric coupling constant"},

  swt == {
        TeX -> Subscript[OverTilde[s], w],
        ParameterType -> Internal,
        Value -> ee/gw,
        Description -> "Sin of the Weinberg angle (tilde)"},

  cwt == {
        TeX -> Subscript[OverTilde[c], w],
        ParameterType -> Internal,
        Value -> Sqrt[1 - swt^2],
        Description -> "Cos of the Weinberg angle (tilde)"},

  twt == {
        TeX -> Subscript[OverTilde[t], w],
        ParameterType -> Internal,
        Value -> swt/cwt,
        Description -> "Tan of the Weinberg angle (tilde)"},

  gz == {
        TeX -> Subscript[g, z],
        ParameterType -> Internal,
        Value -> gw/cwt,
        InteractionOrder -> {QED, 1},
        Description -> "Z coupling"},

  g1 == {
        TeX -> Subscript[g, 1],
        ParameterType -> Internal,
        Value -> gw twt,
        InteractionOrder -> {QED, 1},
        Description -> "U(1)Y coupling"},
	
  mWt ==	{
        TeX -> Subscript[OverTilde[m], W],
        ParameterType -> Internal,
	    Value -> gw vv /2,
	    Description -> "W mass tilde"},
	
  mZt ==	{
        TeX -> Subscript[OverTilde[m], Z],
        ParameterType -> Internal,
	    Value -> mWt/cwt,
	    Description -> "Z mass tilde"},
	
  zetaC ==	{
        TeX -> Subscript[\[Zeta],C],
        ParameterType -> Internal,
	    Value -> gv vv/(mmVct),
	    Description -> "zeta parameter for the charged vector"},
	
  zetaN ==	{
        TeX -> Subscript[\[Zeta],N],
        ParameterType -> Internal,
	    Value -> gv vv/(2 mmVzt),
	    Description -> "zeta parameter for the neutral vector"},
	
  thC == {
        TeX -> Subscript[\[Theta], C],
        ParameterType -> Internal,
        Value -> -ArcTan[2 chC zetaC mWt mmVct/(mmVct^2-mWt^2)]/2,
        Description -> "Mixing angle in the charged sector"},

  sC == {
        TeX -> Subscript[s,C],
        ParameterType -> Internal,
        Value -> Sin[thC],
        Description -> "Sin of the mixing angle in the charged sector"},

  cC == {
        TeX -> Subscript[c,C],
        ParameterType -> Internal,
        Value -> Cos[thC],
        Description -> "Cos of the mixing angle in the charged sector"},

  thN == {
        TeX -> Subscript[\[Theta], N],
        ParameterType -> Internal,
        Value -> -ArcTan[2 chN zetaN mZt mmVzt/(mmVzt^2-mZt^2)]/2,
        InteractionOrder -> {QED, 1},
        Description -> "Mixing angle in the neutral sector"},

  sN == {
        TeX -> Subscript[s,N],
        ParameterType -> Internal,
        Value -> Sin[thN],
        Description -> "Sin of the mixing angle in the neutral sector"},

  cN == {
        TeX -> Subscript[c,N],
        ParameterType -> Internal,
        Value -> Cos[thN],
        Description -> "Cos of the mixing angle in the neutral sector"},

  MW == {
        TeX -> Subscript[M, W],
        ParameterType -> Internal,
        Value -> Sqrt[1/2 (mmVct^2 + mWt^2 - Sqrt[(mmVct^2-mWt^2)^2 + chC^2 gv^2 gw^2 vv^4])],
        Description -> "W mass"},
  
  gs == {
        TeX -> Subscript[g, s],
        ParameterType -> Internal,
        Value -> Sqrt[4 Pi \[Alpha]S],
        InteractionOrder -> {QCD, 1},
        ParameterName -> G,
        Description -> "Strong coupling constant"},

   yl == {
        Indices -> {Index[Generation]},
        AllowSummation -> True,
        ParameterType -> Internal,
        Value -> {yl[1] -> 0, yl[2] -> 0, yl[3] -> Sqrt[2] ymtau / vv},
        ParameterName -> {yl[1] -> ye, yl[2] -> ym, yl[3] -> ytau},
        InteractionOrder -> {QED, 1},
        ComplexParameter -> False,
        Definitions -> {yl[1] -> 0, yl[2] ->0},
        Description -> "Lepton Yukawa coupling"},

   yu == {
        Indices -> {Index[Generation]},
        AllowSummation -> True,
        ParameterType -> Internal,
        Value -> {yu[1] -> 0, yu[2] -> Sqrt[2] ymc / vv, yu[3] -> Sqrt[2] ymt / vv},
        ParameterName -> {yu[1] -> yu, yu[2] -> yc, yu[3] -> yt},
        InteractionOrder -> {QED, 1},
        ComplexParameter -> False,
        Definitions -> {yu[1] -> 0},
        Description -> "U-quark Yukawa coupling"},

   yd == {
        Indices -> {Index[Generation]},
        AllowSummation -> True,
        ParameterType -> Internal,
        Value -> {yd[1] -> 0, yd[2] -> 0, yd[3] -> Sqrt[2] ymb / vv},
        ParameterName -> {yd[1] -> yd, yd[2] -> ys, yd[3] -> yb},
        InteractionOrder -> {QED, 1},
        ComplexParameter -> False,
        Definitions -> {yd[1] -> 0, yd[2] -> 0},
        Description -> "D-quark Yukawa coupling"},

   cabi == {
        TeX -> Subscript[\[Theta], cab],
        ParameterType -> External,
        BlockName -> CKMBLOCK,
        OrderBlock -> {1},
        Value -> 0.22759,
        Description -> "Cabibbo angle"},

   CKM == {
       Indices -> {Index[Generation], Index[Generation]},
       TensorClass -> CKM,
       Unitary -> True,
       Definitions -> {	CKM[3, 3] -> 1,
                       	CKM[i_, 3] :> 0 /; i != 3,
                       	CKM[3, i_] :> 0 /; i != 3},
       Value -> {	CKM[1,2] -> 0,
                   	CKM[1,1] -> 1,
                   	CKM[2,1] -> 0,
                   	CKM[2,2] -> 1},
       Description -> "CKM-Matrix"},

   WVz == {
        TeX -> Subscript[\[Gamma], Superscript[V,"0"]],
        ParameterType -> Internal,
        Value -> (MVz*(cwt^2*ee*sN + clN*cN*cwt*gv*swt + ee*sN*swt^2)^2)/(32*cwt^2*Pi*swt^2) + 
 (MVz*(cwt^4*ee^2*sN^2 - 2*clN*cN*cwt^3*ee*gv*sN*swt + cwt^2*(ceRN^2*cN^2*gv^2 + clN^2*cN^2*gv^2 - 2*ee^2*sN^2)*swt^2 + 2*(2*ceRN + clN)*cN*cwt*ee*gv*sN*swt^3 + 
    5*ee^2*sN^2*swt^4))/(32*cwt^2*Pi*swt^2) + 
 (MVz*(9*cwt^4*ee^2*sN^2 - 18*cN*cqLN*cwt^3*ee*gv*sN*swt + 3*cwt^2*(3*cdRN^2*cN^2*gv^2 + 3*cN^2*cqLN^2*gv^2 + 2*ee^2*sN^2)*swt^2 + 
    6*cN*(2*cdRN - cqLN)*cwt*ee*gv*sN*swt^3 + 5*ee^2*sN^2*swt^4))/(144*cwt^2*Pi*swt^2) + 
 (MVz*(9*cwt^4*ee^2*sN^2 + 18*cN*cqLN*cwt^3*ee*gv*sN*swt + 3*cwt^2*(3*cN^2*(cqLN^2 + cuRN^2)*gv^2 - 2*ee^2*sN^2)*swt^2 - 6*cN*(cqLN + 4*cuRN)*cwt*ee*gv*sN*swt^3 + 
    17*ee^2*sN^2*swt^4))/(144*cwt^2*Pi*swt^2) + 
 (Sqrt[-4*MB^2*MVz^2 + MVz^4]*(9*cwt^4*ee^2*(-MB^2 + MVz^2)*sN^2 - 18*cN*cwt^3*ee*gv*(3*cdR3N*MB^2 + cqL3N*(-MB^2 + MVz^2))*sN*swt + 
    3*cwt^2*(18*cdR3N*cN^2*cqL3N*gv^2*MB^2 + 3*cdR3N^2*cN^2*gv^2*(-MB^2 + MVz^2) + 3*cN^2*cqL3N^2*gv^2*(-MB^2 + MVz^2) + 2*ee^2*(-7*MB^2 + MVz^2)*sN^2)*swt^2 - 
    6*cN*cwt*ee*gv*(5*cdR3N*MB^2 - 7*cqL3N*MB^2 - 2*cdR3N*MVz^2 + cqL3N*MVz^2)*sN*swt^3 + ee^2*(-17*MB^2 + 5*MVz^2)*sN^2*swt^4))/(288*cwt^2*MVz^3*Pi*swt^2) + 
 (Sqrt[-4*MT^2*MVz^2 + MVz^4]*(9*cwt^4*ee^2*(-MT^2 + MVz^2)*sN^2 + 18*cN*cwt^3*ee*gv*(3*cuR3N*MT^2 + cqL3N*(-MT^2 + MVz^2))*sN*swt - 
    3*cwt^2*(3*cN^2*gv^2*(-6*cqL3N*cuR3N*MT^2 + cqL3N^2*(MT^2 - MVz^2) + cuR3N^2*(MT^2 - MVz^2)) + 2*ee^2*(11*MT^2 + MVz^2)*sN^2)*swt^2 - 
    6*cN*cwt*ee*gv*(11*cqL3N*MT^2 - cuR3N*MT^2 + cqL3N*MVz^2 + 4*cuR3N*MVz^2)*sN*swt^3 + ee^2*(7*MT^2 + 17*MVz^2)*sN^2*swt^4))/(288*cwt^2*MVz^3*Pi*swt^2) + 
 ((MVz - 2*MW)*(MVz + 2*MW)*Sqrt[MVz^4 - 4*MVz^2*MW^2]*(cN^2*gv^2*(12*cvvvC*cvvvN*MVz^2*MW^2 + 4*cvvvC^2*MW^2*(MVz^2 + 3*MW^2) + cvvvN^2*(MVz^4 + 4*MVz^2*MW^2))*sC^4 + 
    2*cN*gv*sC^2*sN*(cC^2*cwt*gw*(2*cvvvC*MW^2*(5*MVz^2 + 6*MW^2) + cvvvN*(MVz^4 + 10*MVz^2*MW^2)) - 
      g1*(2*MW^2*(2*cvvvC*MVz^2 + 3*cvvvN*MVz^2 + 6*cvvvC*MW^2) + cvvbC*MVz^2*(cvvvN*MVz^2 + 6*cvvvC*MW^2 + 4*cvvvN*MW^2))*sC^2*swt) + 
    sN^2*(cC^4*cwt^2*gw^2*(MVz^4 + 20*MVz^2*MW^2 + 12*MW^4) - 2*cC^2*cwt*g1*gw*(cvvbC*MVz^4 + 10*MVz^2*MW^2 + 10*cvvbC*MVz^2*MW^2 + 12*MW^4)*sC^2*swt + 
      g1^2*(12*cvvbC*MVz^2*MW^2 + 4*MW^2*(MVz^2 + 3*MW^2) + cvvbC^2*(MVz^4 + 4*MVz^2*MW^2))*sC^4*swt^2)))/(192*MVz^3*MW^4*Pi) + 
 ((MH^4 + MVz^4 + 10*MVz^2*MZ^2 + MZ^4 - 2*MH^2*(MVz^2 + MZ^2))*Sqrt[MH^4 + (MVz^2 - MZ^2)^2 - 2*MH^2*(MVz^2 + MZ^2)]*
   (4*aa*cN*cwt*mZt^2*sN + gv*(-4*cN*cvvhhN*cwt*gv*sN + chN*gw*(-cN^2 + sN^2))*vv^2)^2)/(768*cwt^2*MVz^5*MZ^2*Pi*vv^2),
	    Description -> "Neutral heavy vector total width"},
	
   WVc == {
        TeX -> Subscript[\[Gamma], Superscript[V,"+"]],
        ParameterType -> Internal,
        Value -> (ee^2*MVc*sC^2)/(16*Pi*swt^2) - (Sqrt[MB^4 + (MT^2 - MVc^2)^2 - 2*MB^2*(MT^2 + MVc^2)]*(ee^2*(MB^4 + MT^4 + MT^2*MVc^2 - 2*MVc^4 + MB^2*(-2*MT^2 + MVc^2))*sC^2 - 
    12*cC*cuR3C*ee*gv*MB*MT*MVc^2*sC*swt + cC^2*cuR3C^2*gv^2*(MB^4 + MT^4 + MT^2*MVc^2 - 2*MVc^4 + MB^2*(-2*MT^2 + MVc^2))*swt^2))/(32*MVc^5*Pi*swt^2) + 
 (cC^2*(MVc - MW)*(MVc + MW)*(MVc^2 + MW^2)*sC^2*(cwt^2*g1^2*((1 + 3*cvvbC + cvvbC^2)*MVc^4 - 2*(7 + 3*cvvbC + cvvbC^2)*MVc^2*MW^2 + (1 + 3*cvvbC + cvvbC^2)*MW^4) - 
    cwt*g1*gw*(5*(1 + cvvbC)*MVc^4 - 2*(17 + 5*cvvbC)*MVc^2*MW^2 + 5*(1 + cvvbC)*MW^4)*swt + gw^2*(5*MVc^4 - 22*MVc^2*MW^2 + 5*MW^4)*swt^2))/(96*MVc^5*MW^2*Pi) + 
 (cC^2*(MVc^4 + (MW^2 - MZ^2)^2 - 2*MVc^2*(MW^2 + MZ^2))^(3/2)*sC^2*
   (gv^2*(6*cvvvC*cvvvN*(MVc^2 + MW^2)*MZ^2 + cvvvN^2*MZ^2*(2*MVc^2 + 2*MW^2 + MZ^2) + cvvvC^2*(MVc^4 + MW^4 + 2*MW^2*MZ^2 + 2*MVc^2*(5*MW^2 + MZ^2)))*sN^2 + 
    cN^2*(cwt^2*gw^2*(MVc^4 + MW^4 + 10*MW^2*MZ^2 + MZ^4 + 10*MVc^2*(MW^2 + MZ^2)) + 2*cwt*g1*gw*(MVc^4 + MW^4 + 5*(1 + cvvbC)*MW^2*MZ^2 + cvvbC*MZ^4 + 
        5*MVc^2*(2*MW^2 + (1 + cvvbC)*MZ^2))*swt + g1^2*(MVc^4 + MW^4 + 2*(1 + 3*cvvbC + cvvbC^2)*MW^2*MZ^2 + cvvbC^2*MZ^4 + 
        2*MVc^2*(5*MW^2 + (1 + 3*cvvbC + cvvbC^2)*MZ^2))*swt^2) + 
    2*cN*gv*sN*(cvvvN*MZ^2*(cwt*gw*(5*MVc^2 + 5*MW^2 + MZ^2) + g1*((3 + 2*cvvbC)*MVc^2 + (3 + 2*cvvbC)*MW^2 + cvvbC*MZ^2)*swt) + 
      cvvvC*(cwt*gw*(MVc^4 + MW^4 + 5*MW^2*MZ^2 + 5*MVc^2*(2*MW^2 + MZ^2)) + g1*(MVc^4 + MW^4 + (2 + 3*cvvbC)*MW^2*MZ^2 + MVc^2*(10*MW^2 + (2 + 3*cvvbC)*MZ^2))*swt))))/
  (192*MVc^5*MW^2*MZ^2*Pi) + ((MH^4 + MVc^4 + 10*MVc^2*MW^2 + MW^4 - 2*MH^2*(MVc^2 + MW^2))*Sqrt[MH^4 + (MVc^2 - MW^2)^2 - 2*MH^2*(MVc^2 + MW^2)]*
   (2*aa*cC*mWt^2*sC + gv*(-(cC^2*chC*gw) - 2*cC*cvvhhC*gv*sC + chC*gw*sC^2)*vv^2)^2)/(192*MVc^5*MW^2*Pi*vv^2) + 
 (CKM1x1*MVc*(ee^2*sC^2 + cC^2*cuRC^2*gv^2*swt^2)*Conjugate[CKM1x1])/(8*Pi*swt^2) + (CKM1x2*MVc*(ee^2*sC^2 + cC^2*cuRC^2*gv^2*swt^2)*Conjugate[CKM1x2])/(8*Pi*swt^2),
	    Description -> "Charged heavy vector total width"}
}
